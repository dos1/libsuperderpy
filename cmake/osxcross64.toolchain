set(CMAKE_SYSTEM_NAME Darwin)

# replace with your path to OSXCross toolchain
set(OSXCROSS_PATH "$ENV{LIBSUPERDERPY_OSXCROSS_ROOT}" CACHE PATH "Path to OSXCross toolchain" )
set(OSXCROSS_SDK_VERSION "$ENV{LIBSUPERDERPY_OSXCROSS_SDK_VERSION}" CACHE STRING "Version of Xcode SDK used to build the toolchain")
set(CMAKE_OSX_SYSROOT "${OSXCROSS_PATH}/SDK/MacOSX${OSXCROSS_SDK_VERSION}.sdk")

message( STATUS "Selected OSXCross toolchain: ${OSXCROSS_PATH}, SDK version: ${OSXCROSS_SDK_VERSION}" )
if(NOT EXISTS "${OSXCROSS_PATH}")
   message( FATAL_ERROR "Invalid OSXCROSS_PATH!")
endif()
if(NOT EXISTS "${OSXCROSS_PATH}/SDK/MacOSX${OSXCROSS_SDK_VERSION}.sdk")
   message( FATAL_ERROR "Invalid OSXCROSS_SDK_VERSION! Make sure ${OSXCROSS_PATH}/SDK/MacOSX\${OSXCROSS_SDK_VERSION}.sdk/ directory exists.")
endif()

set(CMAKE_C_COMPILER ${OSXCROSS_PATH}/bin/o64-clang)
set(CMAKE_CXX_COMPILER ${OSXCROSS_PATH}/bin/o64-clang++)
set(CMAKE_LINKER ${OSXCROSS_PATH}/bin/x86_64-apple-darwin15-ld)
set(CMAKE_AR ${OSXCROSS_PATH}/bin/x86_64-apple-darwin15-ar)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

set(CMAKE_PREFIX_PATH ${OSXCROSS_PATH}/local)
set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} ${CMAKE_PREFIX_PATH}/lib ${OSXCROSS_PATH}/macports/pkgs/opt/local/lib ${OSXCROSS_PATH}/SDK/MacOSX${OSXCROSS_SDK_VERSION}.sdk/usr/lib)
set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} ${CMAKE_PREFIX_PATH}/include ${OSXCROSS_PATH}/macports/pkgs/opt/local/include ${OSXCROSS_PATH}/SDK/MacOSX${OSXCROSS_SDK_VERSION}.sdk/usr/include)

# Do a no-op access on the CMAKE_TOOLCHAIN_FILE variable so that CMake will not issue a warning on it being unused.
if (CMAKE_TOOLCHAIN_FILE)
endif()
